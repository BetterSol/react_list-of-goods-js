{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_GOODS_ABC","SORT_GOODS_BY_LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","sortedGoods","goods","sortedGoodsCopy","sort","good1","good2","localeCompare","length","reverse","getSortedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAiB,MACjBC,EAAuB,SA2BtB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA5BR,SAAwBC,EAAOL,EAAWE,GACxC,IAAMI,EAAe,YAAOD,GAqB5B,OAnBIL,GACFM,EAAgBC,MAAK,SAACC,EAAOC,GAC3B,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAOL,MAKXJ,GACFI,EAAgBM,UAGXN,EAMaO,CAAelB,EAAiBK,EAAWE,GAE/D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYhB,IAAcJ,IAE9BqB,QAAS,WACPhB,EAAaL,IARjB,iCAcA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYhB,IAAcH,IAE9BoB,QAAS,WACPhB,EAAaJ,IARjB,4BAcA,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAad,IAEjBe,QAAS,WACPd,GAAeD,IARnB,sBAcEF,GAAaE,IACb,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAa,IACbE,GAAc,IALlB,sBAaJ,6BACGC,EAAYc,KAAI,SAAAC,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC9GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ce075caf.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n// import { set } from 'cypress/types/lodash';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_GOODS_ABC = 'abc';\nconst SORT_GOODS_BY_LENGTH = 'length';\n\nfunction getSortedGoods(goods, sortField, isReversed) {\n  const sortedGoodsCopy = [...goods];\n\n  if (sortField) {\n    sortedGoodsCopy.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_GOODS_ABC:\n          return good1.localeCompare(good2);\n\n        case SORT_GOODS_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return sortedGoodsCopy;\n      }\n    });\n  }\n\n  if (isReversed) {\n    sortedGoodsCopy.reverse();\n  }\n\n  return sortedGoodsCopy;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const sortedGoods = getSortedGoods(goodsFromServer, sortField, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SORT_GOODS_ABC },\n          )}\n          onClick={() => {\n            setSortField(SORT_GOODS_ABC);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== SORT_GOODS_BY_LENGTH },\n          )}\n          onClick={() => {\n            setSortField(SORT_GOODS_BY_LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => {\n            setIsReversed(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}